'use strict';

const uglifyJS = require('uglify-js');
const chalk = require('chalk');
const fs = require('fs-extra');
const path = require('path');

module.exports = function uglify(sourceDir, distDir, enableMangle, enableSourcemap) {
  let files;
  
  try {
    files = fs.readdirSync(sourceDir);
  } catch(e) {
    console.log(chalk.red("Can't read source directory!"));
    process.exit(1);
  }

  fs.emptyDirSync(distDir);

  for(let i = 0; i < files.length; i++) {
    let filename = path.join(sourceDir, files[i]);
    let stat = fs.lstatSync(filename);

    if(stat.isDirectory()) {
      uglify(filename, path.join(distDir, files[i]), enableMangle, enableSourcemap);
    } else if(filename.endsWith('.js')) {
      let options = enableSourcemap ? {
          outSourceMap: files[i] + '.map',
          sourceMapIncludeSources: true,
          sources: [files[i]],
          mangle: enableMangle && {
            toplevel: true
          }
        } : {
          mangle: enableMangle && {
            toplevel: true
          }
        };
      let result = uglifyJS.minify(filename, options);

      fs.outputFile(path.join(distDir, files[i]), result.code, function(err) {
        if(err) {
           console.log(chalk.red("Can't write file: " + path.join(distDir, files[i])));
           process.exit(1);
          }
       });

      if(enableSourcemap) {
        let resultMap = JSON.parse(result.map);
        resultMap.sources=[files[i]+'.map'];
        fs.outputFile(path.join(distDir, files[i] + '.map'), JSON.stringify(resultMap), function(err) {
          if(err) {
            console.log(chalk.red("Can't write file: " + path.join(distDir, files[i] + '.map')));
            process.exit(1);
          }
        });
      }
    }
  }
}